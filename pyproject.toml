[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "streetcrime"
version = "0.1.0"
description = "A python ABM package for urban crime"
authors = [{ name = "Adam Amer", email = "adam@example.com" }]
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "mesa-frames @ git+https://github.com/projectmesa/mesa-frames.git",
    "beartype>=0.15.0",  # Required by mesa-frames but not auto-installed
    "geopandas>=0.14.0",
    "pandas>=2.1.0",
    "numpy>=1.26.0",
    "pyproj>=3.6.0",
    "osmnx>=1.8.0",
    "scipy>=1.11.0",
    # Additional dependencies for analysis and visualization
    "matplotlib>=3.7.0",
    "seaborn>=0.13.0",
    "plotly>=5.0.0",
    "rich>=13.0.0",
]

[dependency-groups]
dev = [
    "ruff>=0.8.0",
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.12.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.24.0",
    "pre-commit>=3.6.0",
    "typeguard>=4.0.0",
    "python-dotenv>=1.0.0",
    "mypy>=1.8.0",
    "icecream>=2.1.3",
]
test = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
]
docs = [
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.24.0",
    "markdown-callouts>=0.3.0",
    "pygments>=2.17.0",
]
lint = [
    "ruff>=0.8.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
]

[project.urls]
Homepage = "https://github.com/adamamer20/streetcrime"
Documentation = "https://adamamer20.github.io/streetcrime/"
Repository = "https://github.com/adamamer20/streetcrime"
Issues = "https://github.com/adamamer20/streetcrime/issues"

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "RUF100", # unused noqa
]
ignore = [
    "E501", # line too long, handled by ruff format
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B018"]

[tool.ruff.lint.isort]
known-first-party = ["streetcrime"]

[tool.pytest.ini_options]
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.hatch.version]
path = "src/streetcrime/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/streetcrime"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "geopandas.*",
    "osmnx.*",
    "mesa_frames.*",
]
ignore_missing_imports = true
